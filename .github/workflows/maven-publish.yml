# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package
env:
  hostPath: /opt/project/test
  #  是否替换依赖包，用于依赖变更时重新覆盖依赖包
  replaceLib: true
on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Build with Maven
        run: mvn -B  -Dmaven.test.skip=true  package --file pom.xml
#      - name: Build Docker Image
#        id: buildAndPushImage
#        uses: risfeng/docker-image-build-push-action@v1.0
#        with:
#          registry_url: 'ccr.ccs.tencentyun.com'
#          namespaces: 'zflzqy'
#          repository_name: 'test'
#          user_name: ${{ secrets.TENCENT_DOKER_USERNAME }}
#          password: ${{ secrets.TENCENT_DOKER_PASSWROD }}
#          image_version: ${{ steps.get_version.outputs.VERSION }}
#          docker_file: '.'
      - name: Trigger deploy
        uses: phamquyhai/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f k8s/k8s.yaml
